---
title: "Project"
author: "Xu Lin"
---

```{r}
pacman::p_load(lubridate, ggthemes, reactable, timetk, forecast, zoo,
reactablefmtr, gt, gtExtras, tidyverse, ggplot2)
```

```{r}
rental <- read_csv("data/rent.csv") 
```

```{r}
rentalnew <- rental %>%
  select(
    NoOfBedroom = `No of Bedroom`, 
    MonthlyRent = `Monthly Rent ($)`,
    ProjectName1 = `Project Name`,
    LeaseCommencementDate = `Lease Commencement Date`)
```

```{r}
postdistrictdata <- read_csv("data/realis2018.csv") %>%
  select(PlanningArea = "Planning Area",
         ProjectName2 = "Project Name") %>%
  distinct()
```

```{r}
Retentialdatamerged <- rentalnew %>%
  left_join(postdistrictdata, by = c("ProjectName1" = "ProjectName2")) %>%
  drop_na() %>%
  mutate(PlanningArea = case_when(
    PlanningArea == "YISHUN" ~ "Yishun",
    TRUE ~ PlanningArea 
  )) 
```

```{r}
Retentialdatamerged$LeaseCommencementDate <- as.Date(Retentialdatamerged$LeaseCommencementDate)
Retentialdatamerged$YearMonth <- format(Retentialdatamerged$LeaseCommencementDate, "%Y-%m")
Retentialdatamerged$YearMonthDate <- as.Date(paste0(Retentialdatamerged$YearMonth, "-01"))
rental_data <- Retentialdatamerged %>%
  filter(PlanningArea == "Bedok", NoOfBedroom == 3)
```

```{r}
write_csv(Retentialdatamerged, "rentalalldata.csv")
```

```{r}
monthly_median <- aggregate(MonthlyRent ~ YearMonth, data = rental_data, median)
highest_median_month <- monthly_median$YearMonth[which.max(monthly_median$MonthlyRent)]
ggplot(rental_data, aes(x = YearMonth, y = MonthlyRent)) +
  geom_boxplot() +
  geom_smooth(method = "loess", colour = "blue", fill = "grey", alpha = 0.5, size = 1, aes(group = 1)) + 
  stat_summary(fun = median, geom = "line", colour = "red", size = 1, aes(group = 1)) +
  geom_vline(xintercept = highest_median_month, color = "red", linetype = "dashed", size = 1) + 
  theme_minimal() +
  labs(title = "Monthly Rent for 3 Bedrooms in Bedok",
       x = "Month by Year",
       y = "Monthly Rent $") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```

```{r}
monthly_median$YearMonthDate <- as.Date(paste0(monthly_median$YearMonth, "-01"))
ts_data <- ts(monthly_median$MonthlyRent, frequency = 12, 
              start = c(year(min(monthly_median$YearMonthDate)), 
                        month(min(monthly_median$YearMonthDate))))
model <- auto.arima(ts_data)
forecasted_values <- forecast(model, h = 3)
last_known_date <- max(monthly_median$YearMonthDate)
future_dates <- seq(from = last_known_date, by = "month", length.out = 4)[-1]
forecast_df <- data.frame(
  YearMonthDate = future_dates,
  MonthlyRent = forecasted_values$mean
)
ggplot(rental_data, aes(x = YearMonthDate, y = MonthlyRent)) +
  geom_boxplot() +
  geom_line(data = forecast_df, aes(x = YearMonthDate, y = MonthlyRent), color = "green", linetype = "dashed") +
  theme_minimal() +
  labs(title = "Monthly Rent for 3 Bedrooms in Bedok with Forecast",
       x = "Month by Year",
       y = "Monthly Rent $") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
```

```{r}
stats_by_area_and_date <- Retentialdatamerged %>%
  group_by(PlanningArea, YearMonth, NoOfBedroom) %>%
  summarise(
    MinRent = min(MonthlyRent, na.rm = TRUE),
    MaxRent = max(MonthlyRent, na.rm = TRUE),
    MedianRent = median(MonthlyRent, na.rm = TRUE),
    .groups = "drop")
```

```{r}
roomline <- stats_by_area_and_date %>% filter(NoOfBedroom == 3)
```

```{r}
highest_rent <- max(roomline$MedianRent, na.rm = TRUE)
highest_rent_month <- roomline$YearMonth[roomline$MedianRent == highest_rent]

ggplot(roomline, aes(x = YearMonth, y = MedianRent, group = PlanningArea, color = PlanningArea)) +
  geom_line() +
  geom_vline(xintercept = highest_rent_month, color = "red", linetype = "dashed") +
  theme_minimal() +
  labs(title = "Median Monthly Rent by Planning Area Over Time for 3 Bedrooms",
       x = "Month by Year",
       y = "Median Monthly Rent ($)") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  scale_color_viridis_d()
```









